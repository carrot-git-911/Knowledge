{
    "manifest": {
        "translationVersion": 1741832093285,
        "pluginVersion": "2.8.7"
    },
    "description": {
        "original": "An AI Copilot in Obsidian.",
        "translation": "An AI Copilot in Obsidian."
    },
    "dict": {
        "Notice(\"No active leaf found.\")": "Notice(\"No active leaf found.\")",
        "Notice(\"Failed to open a markdown view.\")": "Notice(\"Failed to open a markdown view.\")",
        "Notice(\"Message inserted into the active note.\")": "Notice(\"Message inserted into the active note.\")",
        "Notice(\"Connection successful, but requires CORS to be enabled. Please enable CORS for this model once you add it above.\")": "Notice(\"Connection successful, but requires CORS to be enabled. Please enable CORS for this model once you add it above.\")",
        "Notice(\"Failed to initialize Copilot database. Some features may be limited.\")": "Notice(\"Failed to initialize Copilot database. Some features may be limited.\")",
        "Notice(\"Local Copilot index cleared successfully.\")": "Notice(\"Local Copilot index cleared successfully.\")",
        "Notice(\"An error occurred while clearing the local Copilot index.\")": "Notice(\"An error occurred while clearing the local Copilot index.\")",
        "Notice(\"New embedding model detected. Rebuilding Copilot index from scratch.\")": "Notice(\"New embedding model detected. Rebuilding Copilot index from scratch.\")",
        "Notice(\"Copilot vault index is up-to-date.\")": "Notice(\"Copilot vault index is up-to-date.\")",
        "Notice(),this.dbOps.clearFilesMissingEmbeddings()": "Notice(),this.dbOps.clearFilesMissingEmbeddings()",
        "Notice(\"No valid content to index.\")": "Notice(\"No valid content to index.\")",
        "Notice(){let t=document.createDocumentFragment()": "Notice(){let t=document.createDocumentFragment()",
        "Notice(t,0)": "Notice(t,0)",
        "Notice(\"No files to index with current filters\")": "Notice(\"No files to index with current filters\")",
        "Notice(\"Vault is too large for 1 partition, please increase the number of partitions in your Copilot QA settings!\",1e4)": "Notice(\"Vault is too large for 1 partition, please increase the number of partitions in your Copilot QA settings!\",1e4)",
        "Notice(o)": "Notice(o)",
        "Notice(\"Indexing cancelled\")": "Notice(\"Indexing cancelled\")",
        "Notice(`Indexing completed with ${t.length} errors. Check console for details.`)": "Notice(`Indexing completed with ${t.length} errors. Check console for details.`)",
        "Notice(\"Indexing completed successfully!\")": "Notice(\"Indexing completed successfully!\")",
        "Notice(\"Failed to initialize vector store. Please make sure you have a valid API key for your embedding model and restart the plugin.\")": "Notice(\"Failed to initialize vector store. Please make sure you have a valid API key for your embedding model and restart the plugin.\")",
        "Notice(\"Indexing is disabled on mobile devices\")": "Notice(\"Indexing is disabled on mobile devices\")",
        "Notice(\"Copilot Plus license key not found. Please enter your license key in the settings.\")": "Notice(\"Copilot Plus license key not found. Please enter your license key in the settings.\")",
        "Notice(`Error creating model: ${r}`)": "Notice(`Error creating model: ${r}`)",
        "Notice(a)": "Notice(a)",
        "Notice(n.message)": "Notice(n.message)",
        "Notice(\"An error occurred while executing the tool. Check console for details.\")": "Notice(\"An error occurred while executing the tool. Check console for details.\")",
        "Notice(`Pomodoro timer (${e})": "Notice(`Pomodoro timer (${e})",
        "Notice(u)": "Notice(u)",
        "Notice(t)": "Notice(t)",
        "Notice(\"Title contains invalid characters. Please remove them before saving.\")": "Notice(\"Title contains invalid characters. Please remove them before saving.\")",
        "Notice(bi(S)": "Notice(bi(S)",
        "Notice(\"Please fill in both fields: Title and Prompt.\")": "Notice(\"Please fill in both fields: Title and Prompt.\")",
        "Notice(\"Database not found\")": "Notice(\"Database not found\")",
        "Notice(\"Error executing search. Check console for details.\")": "Notice(\"Error executing search. Check console for details.\")",
        "Notice(\"Copied to clipboard\")": "Notice(\"Copied to clipboard\")",
        "Notice(\"No valid note paths found. Use format: - [[Note Name]]\")": "Notice(\"No valid note paths found. Use format: - [[Note Name]]\")",
        "Notice(\"Error searching database. Check console for details.\")": "Notice(\"Error searching database. Check console for details.\")",
        "Notice(\"No active note found.\")": "Notice(\"No active note found.\")",
        "Notice(`Selected text contains ${a} words and ${s} tokens.`)": "Notice(`Selected text contains ${a} words and ${s} tokens.`)",
        "Notice(`Total tokens in your vault: ${i}`)": "Notice(`Total tokens in your vault: ${i}`)",
        "Notice(\"An error occurred while counting tokens.\")": "Notice(\"An error occurred while counting tokens.\")",
        "Notice(\"Custom prompt saved successfully.\")": "Notice(\"Custom prompt saved successfully.\")",
        "Notice(\"Please select a prompt title.\")": "Notice(\"Please select a prompt title.\")",
        "Notice(`No prompt found with the title \"${a}\".`)": "Notice(`No prompt found with the title \"${a}\".`)",
        "Notice(\"An error occurred.\")": "Notice(\"An error occurred.\")",
        "Notice(`Prompt \"${s}\" has been deleted.`)": "Notice(`Prompt \"${s}\" has been deleted.`)",
        "Notice(\"An error occurred while deleting the prompt.\")": "Notice(\"An error occurred while deleting the prompt.\")",
        "Notice(`Prompt \"${l}\" has been updated.`)": "Notice(`Prompt \"${l}\" has been updated.`)",
        "Notice(`No prompt found with the title \"${s}\".`)": "Notice(`No prompt found with the title \"${s}\".`)",
        "Notice(`${o} documents removed from Copilot index.`)": "Notice(`${o} documents removed from Copilot index.`)",
        "Notice(\"An error occurred while garbage collecting the Copilot index.\")": "Notice(\"An error occurred while garbage collecting the Copilot index.\")",
        "Notice(`${o} vault files indexed to Copilot index.`)": "Notice(`${o} vault files indexed to Copilot index.`)",
        "Notice(\"An error occurred while indexing vault to Copilot index.\")": "Notice(\"An error occurred while indexing vault to Copilot index.\")",
        "Notice(`${o} vault files re-indexed to Copilot index.`)": "Notice(`${o} vault files re-indexed to Copilot index.`)",
        "Notice(\"An error occurred while re-indexing vault to Copilot index.\")": "Notice(\"An error occurred while re-indexing vault to Copilot index.\")",
        "Notice(\"No files found to list.\")": "Notice(\"No files found to list.\")",
        "Notice(`Listed ${o.length} indexed files`)": "Notice(`Listed ${o.length} indexed files`)",
        "Notice(\"Failed to list indexed files.\")": "Notice(\"Failed to list indexed files.\")",
        "Notice(`Successfully removed ${o.length} files from the index.`)": "Notice(`Successfully removed ${o.length} files from the index.`)",
        "Notice(\"An error occurred while removing files from the index.\")": "Notice(\"An error occurred while removing files from the index.\")",
        "Notice(\"Copilot cache cleared successfully\")": "Notice(\"Copilot cache cleared successfully\")",
        "Notice(\"Failed to clear Copilot cache\")": "Notice(\"Failed to clear Copilot cache\")",
        "Notice(\"Vault index refreshed.\")": "Notice(\"Vault index refreshed.\")",
        "Notice(\"Failed to refresh vault index. Check console for details.\")": "Notice(\"Failed to refresh vault index. Check console for details.\")",
        "Notice(ge)": "Notice(ge)",
        "Notice(Je)": "Notice(Je)",
        "Notice(`Reindexed ${u.name}`)": "Notice(`Reindexed ${u.name}`)",
        "Notice(\"No messages to save.\")": "Notice(\"No messages to save.\")",
        "Notice(`Chat updated in existing note: ${Xi}`)": "Notice(`Chat updated in existing note: ${Xi}`)",
        "Notice(`Chat saved as new note: ${Xi}`)": "Notice(`Chat saved as new note: ${Xi}`)",
        "Notice(\"Failed to save chat as note. Check console for details.\")": "Notice(\"Failed to save chat as note. Check console for details.\")",
        "Notice(\"Cannot regenerate the first message or a user message.\")": "Notice(\"Cannot regenerate the first message or a user message.\")",
        "Notice(\"Failed to regenerate message. Please try again.\")": "Notice(\"Failed to regenerate message. Please try again.\")",
        "Notice(\"API key verification failed: No default test model found for the selected provider.\",1e4)": "Notice(\"API key verification failed: No default test model found for the selected provider.\",1e4)",
        "Notice(\"API key verified successfully!\")": "Notice(\"API key verified successfully!\")",
        "Notice(\"API key verification failed: \"+bi(_)": "Notice(\"API key verification failed: \"+bi(_)",
        "Notice(`Error: Missing required variables: ${h.join(\", \")": "Notice(`Error: Missing required variables: ${h.join(\", \")",
        "Notice('Error: Format contains illegal characters (\\\\/:*?\"<>|)": "Notice('Error: Format contains illegal characters (\\\\/:*?\"<>|)",
        "Notice(`Format applied successfully! Example: ${S}`,4e3)": "Notice(`Format applied successfully! Example: ${S}`,4e3)",
        "Notice(`Error applying format: ${f.message}`,4e3)": "Notice(`Error applying format: ${f.message}`,4e3)",
        "Notice(m)": "Notice(m)",
        "Notice(\"Please fill in all required fields\")": "Notice(\"Please fill in all required fields\")",
        "Notice(\"Model verification successful!\")": "Notice(\"Model verification successful!\")",
        "Notice(\"Model verification failed: \"+z)": "Notice(\"Model verification failed: \"+z)",
        "Notice(\"Plugin reloaded successfully.\")": "Notice(\"Plugin reloaded successfully.\")",
        "Notice(\"Failed to reload the plugin. Please reload manually.\")": "Notice(\"Failed to reload the plugin. Please reload manually.\")",
        "Notice(\"No chat history found.\")": "Notice(\"No chat history found.\")",
        ".log(\"Using RetryOperation.try()": ".log(\"Using RetryOperation.try()",
        ".log(\"Using RetryOperation.start()": ".log(\"Using RetryOperation.start()",
        ".log(`Dataset ${l} already exists in your tenant. Skipping.`)": ".log(`Dataset ${l} already exists in your tenant. Skipping.`)",
        ".log(`${Sd(rf.green,\"[chain/start]\")": ".log(`${Sd(rf.green,\"[chain/start]\")",
        ".log(`${Sd(rf.cyan,\"[chain/end]\")": ".log(`${Sd(rf.cyan,\"[chain/end]\")",
        ".log(`${Sd(rf.red,\"[chain/error]\")": ".log(`${Sd(rf.red,\"[chain/error]\")",
        ".log(`${Sd(rf.green,\"[llm/start]\")": ".log(`${Sd(rf.green,\"[llm/start]\")",
        ".log(`${Sd(rf.cyan,\"[llm/end]\")": ".log(`${Sd(rf.cyan,\"[llm/end]\")",
        ".log(`${Sd(rf.red,\"[llm/error]\")": ".log(`${Sd(rf.red,\"[llm/error]\")",
        ".log(`${Sd(rf.green,\"[tool/start]\")": ".log(`${Sd(rf.green,\"[tool/start]\")",
        ".log(`${Sd(rf.cyan,\"[tool/end]\")": ".log(`${Sd(rf.cyan,\"[tool/end]\")",
        ".log(`${Sd(rf.red,\"[tool/error]\")": ".log(`${Sd(rf.red,\"[tool/error]\")",
        ".log(`${Sd(rf.green,\"[retriever/start]\")": ".log(`${Sd(rf.green,\"[retriever/start]\")",
        ".log(`${Sd(rf.cyan,\"[retriever/end]\")": ".log(`${Sd(rf.cyan,\"[retriever/end]\")",
        ".log(`${Sd(rf.red,\"[retriever/error]\")": ".log(`${Sd(rf.red,\"[retriever/error]\")",
        ".log(`${Sd(rf.blue,\"[agent/action]\")": ".log(`${Sd(rf.blue,\"[agent/action]\")",
        ".log(t)": ".log(t)",
        ".log(c.identify()": ".log(c.identify()",
        "glog(){return function()": "glog(){return function()",
        "glog(\"stream\",e=>{an=e})": "glog(\"stream\",e=>{an=e})",
        ".log(\"Failed to log request:\",s)": ".log(\"Failed to log request:\",s)",
        ".log(\"Failed to log response:\",s)": ".log(\"Failed to log response:\",s)",
        ".log(`${o}: ${i}`)": ".log(`${o}: ${i}`)",
        ".log(await t.clone()": ".log(await t.clone()",
        ".log(`${i}: ${s}`)": ".log(`${i}: ${s}`)",
        ".log(`<${r}>`)": ".log(`<${r}>`)",
        ".log(\"Status Code:\",t.status,t.statusText)": ".log(\"Status Code:\",t.status,t.statusText)",
        ".log(`${i}: ${a}`)": ".log(`${i}: ${a}`)",
        ".log(`<${n}>`)": ".log(`<${n}>`)",
        ".log(`${a}: ${u}`)": ".log(`${a}: ${u}`)",
        ".log(...e)": ".log(...e)",
        ".log(\"New LLM chain created.\")": ".log(\"New LLM chain created.\")",
        ".log(\"Input Question: \",_.question)": ".log(\"Input Question: \",_.question)",
        ".log(\"Formatted Chat History: \",g)": ".log(\"Formatted Chat History: \",g)",
        ".log(\"Standalone Question: \",g)": ".log(\"Standalone Question: \",g)",
        ".log(\"Failed to parse error response as JSON\")": ".log(\"Failed to parse error response as JSON\")",
        ".log(\"Getting text from response\")": ".log(\"Getting text from response\")",
        ".log(\"Failed to get text from error response\")": ".log(\"Failed to get text from error response\")",
        ".log(a)": ".log(a)",
        ".log(`OpenAI:DEBUG:${e}`,...r)": ".log(`OpenAI:DEBUG:${e}`,...r)",
        ".log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")": ".log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")",
        ".log(\"First ping attempt failed, trying with CORS...\")": ".log(\"First ping attempt failed, trying with CORS...\")",
        ".log(1+(r-t+.5)": ".log(1+(r-t+.5)",
        ".log(`Total documents to distribute: ${t.length}`)": ".log(`Total documents to distribute: ${t.length}`)",
        ".log(`Partition ${s+1}: ${a.length} documents`)": ".log(`Partition ${s+1}: ${a.length} documents`)",
        ".log(`Total documents distributed: ${i}`)": ".log(`Total documents distributed: ${i}`)",
        ".log(`Starting save with ${i.length??0} total documents`)": ".log(`Starting save with ${i.length??0} total documents`)",
        ".log(\"Saved empty database state\")": ".log(\"Saved empty database state\")",
        ".log(`Saved partition ${l+1}/${n}`)": ".log(`Saved partition ${l+1}/${n}`)",
        ".log(\"Saved all partitions\")": ".log(\"Saved all partitions\")",
        ".log(`Detected vector length: ${r.length} for model: ${ps.getModelName(e)": ".log(`Detected vector length: ${r.length} for model: ${ps.getModelName(e)",
        ".log(\"Copilot Plus: Triggering reindex for file \",t.path)": ".log(\"Copilot Plus: Triggering reindex for file \",t.path)",
        ".log(\"Copilot Plus: Initializing event listeners\")": ".log(\"Copilot Plus: Initializing event listeners\")",
        ".log(\"Copilot index checkpoint save completed.\")": ".log(\"Copilot index checkpoint save completed.\")",
        ".log(\"Copilot index final save completed.\")": ".log(\"Copilot index final save completed.\")",
        ".log(\"No files to index after filter change, stopping indexing\")": ".log(\"No files to index after filter change, stopping indexing\")",
        ".log(\"Total files to index:\",this.state.totalFilesToIndex)": ".log(\"Total files to index:\",this.state.totalFilesToIndex)",
        ".log(\"Files to index:\",t)": ".log(\"Files to index:\",t)",
        ".log(`Reindexed file: ${t.path}`)": ".log(`Reindexed file: ${t.path}`)",
        ".log(\"Indexing cancelled by user\")": ".log(\"Indexing cancelled by user\")",
        ".log(`Anthropic:DEBUG:${e}`,...t)": ".log(`Anthropic:DEBUG:${e}`,...t)",
        ".log(`Groq:DEBUG:${e}`,...t)": ".log(`Groq:DEBUG:${e}`,...t)",
        ".log(\"Failed to reinitialize model due to missing API key\")": ".log(\"Failed to reinitialize model due to missing API key\")",
        ".log(\"No chunks found for query:\",r)": ".log(\"No chunks found for query:\",r)",
        ".log(\"*** HYBRID RETRIEVER DEBUG INFO: ***\")": ".log(\"*** HYBRID RETRIEVER DEBUG INFO: ***\")",
        ".log(`\nOriginal Query: `,r)": ".log(`\nOriginal Query: `,r)",
        ".log(\"Rewritten Query: \",u)": ".log(\"Rewritten Query: \",u)",
        ".log(`\nExplicit Chunks: `,s)": ".log(`\nExplicit Chunks: `,s)",
        ".log(\"Orama Chunks: \",l)": ".log(\"Orama Chunks: \",l)",
        ".log(\"Combined Chunks: \",c)": ".log(\"Combined Chunks: \",c)",
        ".log(\"Max Orama Score: \",f)": ".log(\"Max Orama Score: \",f)",
        ".log(\"Reranked Chunks: \",d)": ".log(\"Reranked Chunks: \",d)",
        ".log(\"No reranking applied.\")": ".log(\"No reranking applied.\")",
        ".log(\"Tag only query detected, setting textWeight to 1 and vectorWeight to 0.\")": ".log(\"Tag only query detected, setting textWeight to 1 and vectorWeight to 0.\")",
        ".log(`==== Orama Search Params: ====\n`,s)": ".log(`==== Orama Search Params: ====\n`,s)",
        ".log(\"returnAll:\",o)": ".log(\"returnAll:\",o)",
        ".log(`${this.constructor.name} merged ${u} and ${l} into ${c}`)": ".log(`${this.constructor.name} merged ${u} and ${l} into ${c}`)",
        ".log(`Extracting timezone: '${s}' into: ${c} for: ${o.start}`)": ".log(`Extracting timezone: '${s}' into: ${c} for: ${o.start}`)",
        ".log(`Extracting timezone: '${i[0]}' into : ${n}`)": ".log(`Extracting timezone: '${i[0]}' into : ${n}`)",
        ".log(`${this.constructor.name} remove ${u} by ${s}`)": ".log(`${this.constructor.name} remove ${u} by ${s}`)",
        ".log(`${this.constructor.name} adjusted ${n} time result (${n.start})": ".log(`${this.constructor.name} adjusted ${n} time result (${n.start})",
        ".log(`${this.constructor.name} adjusted ${n} weekday (${n.start})": ".log(`${this.constructor.name} adjusted ${n} weekday (${n.start})",
        ".log(`${this.constructor.name} adjusted ${n} weekday (${n.end})": ".log(`${this.constructor.name} adjusted ${n} weekday (${n.end})",
        ".log(`${this.constructor.name} adjusted ${n} year (${n.start})": ".log(`${this.constructor.name} adjusted ${n} year (${n.start})",
        ".log(`${this.constructor.name} adjusted ${n} month (${n.start})": ".log(`${this.constructor.name} adjusted ${n} month (${n.start})",
        ".log(`Removing unlikely result '${r.text}'`)": ".log(`Removing unlikely result '${r.text}'`)",
        ".log(`Removing invalid result: ${r} (${r.end})": ".log(`Removing invalid result: ${r} (${r.end})",
        ".log(`Removing invalid result: ${r} (${r.start})": ".log(`Removing invalid result: ${r} (${r.start})",
        ".log(`(Strict)": ".log(`(Strict)",
        ".log(`Extracting year: '${i[0]}' into : ${n}`)": ".log(`Extracting year: '${i[0]}' into : ${n}`)",
        ".log(`${r.constructor.name} extracted (at index=${d})": ".log(`${r.constructor.name} extracted (at index=${d})",
        ".log(\"Memory initialized with context turns:\",t)": ".log(\"Memory initialized with context turns:\",t)",
        ".log(\"Clearing chat memory\")": ".log(\"Clearing chat memory\")",
        ".log(\"Loaded memory variables:\",t)": ".log(\"Loaded memory variables:\",t)",
        ".log(\"Saving to memory - Input:\",t,\"Output:\",r)": ".log(\"Saving to memory - Input:\",t,\"Output:\",r)",
        ".log(`==== Chat Memory ====\n`,this.chainManager.memoryManager.getMemory()": ".log(`==== Chat Memory ====\n`,this.chainManager.memoryManager.getMemory()",
        ".log(`==== Final AI Response ====\n`,t)": ".log(`==== Final AI Response ====\n`,t)",
        ".log(`==== Final Request to AI ====\n`,l)": ".log(`==== Final Request to AI ====\n`,l)",
        ".log(\"==== Step 1: Analyzing intent ====\")": ".log(\"==== Step 1: Analyzing intent ====\")",
        ".log(\"==== Step 2: Processing local search results ====\")": ".log(\"==== Step 2: Processing local search results ====\")",
        ".log(\"==== Step 3: Condensing Question ====\")": ".log(\"==== Step 3: Condensing Question ====\")",
        ".log(\"Condensed standalone question: \",v)": ".log(\"Condensed standalone question: \",v)",
        ".log(\"==== Step 4: Preparing context ====\")": ".log(\"==== Step 4: Preparing context ====\")",
        ".log(x)": ".log(x)",
        ".log(\"==== Step 5: Invoking QA Chain ====\")": ".log(\"==== Step 5: Invoking QA Chain ====\")",
        ".log(\"No local search results. Using standard LLM Chain.\")": ".log(\"No local search results. Using standard LLM Chain.\")",
        ".log(\"Enhanced user message:\",h)": ".log(\"Enhanced user message:\",h)",
        ".log(`==== Step 2: Calling tool: ${i.tool.name} ====`)": ".log(`==== Step 2: Calling tool: ${i.tool.name} ====`)",
        ".log(\"Truncating documents to fit context length. Truncation ratio:\",s)": ".log(\"Truncating documents to fit context length. Truncation ratio:\",s)",
        ".log(\"New Vault QA chain with hybrid retriever created for entire vault\")": ".log(\"New Vault QA chain with hybrid retriever created for entire vault\")",
        ".log(\"Set chain:\",\"vault_qa\")": ".log(\"Set chain:\",\"vault_qa\")",
        ".log(`==== Step 0: Initial user message ====\n`,t)": ".log(`==== Step 0: Initial user message ====\n`,t)",
        ".log(\"No hits found for note:\",e)": ".log(\"No hits found for note:\",e)",
        ".log(\"No embedding found for note:\",e)": ".log(\"No embedding found for note:\",e)",
        ".log(\"No embeddings found for note:\",t)": ".log(\"No embeddings found for note:\",t)",
        ".log(`stopping generation..., reason: ${ee}`)": ".log(`stopping generation..., reason: ${ee}`)",
        ".log(\"Message regenerated successfully\")": ".log(\"Message regenerated successfully\")",
        ".log(`Verifying ${h} API key:`,m)": ".log(`Verifying ${h} API key:`,m)",
        ".log(\"Copilot plugin unloaded\")": ".log(\"Copilot plugin unloaded\")",
        " error(){if(this._error)": " error(){if(this._error)",
        " error(){return new Yf(n.common.issues)": " error(){return new Yf(n.common.issues)",
        ".error(\"SEMVER\",...e)": ".error(\"SEMVER\",...e)",
        ".error(`An error occurred while creating dataset ${l}. You should delete it manually.`)": ".error(`An error occurred while creating dataset ${l}. You should delete it manually.`)",
        ".error(`Error in postRun for run ${this.id}:`,r)": ".error(`Error in postRun for run ${this.id}:`,r)",
        ".error(`Error in patchRun for run ${this.id}`,t)": ".error(`Error in patchRun for run ${this.id}`,t)",
        ".error(\"This browser lacks typed array (Uint8Array)": ".error(\"This browser lacks typed array (Uint8Array)",
        ".error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\")": ".error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\")",
        ".error(t.value)": ".error(t.value)",
        ".error(e)": ".error(e)",
        ".error(`Unable to parse ${JSON.stringify(e)": ".error(`Unable to parse ${JSON.stringify(e)",
        ".error(`Failed to construct URL with ${r}`,n)": ".error(`Failed to construct URL with ${r}`,n)",
        "}error(){}}})": "}error(){}}})",
        "_error(r)": "_error(r)",
        "_error(t)": "_error(t)",
        ".error(\"Could not parse message into JSON:\",d.data)": ".error(\"Could not parse message into JSON:\",d.data)",
        ".error(\"From chunk:\",d.raw)": ".error(\"From chunk:\",d.raw)",
        ".error(i)": ".error(i)",
        " error(){return new Re.ZodError(n.common.issues)": " error(){return new Re.ZodError(n.common.issues)",
        ".error(u)": ".error(u)",
        ".error(...e)": ".error(...e)",
        ".error(\"Error checking if URL is image:\",r)": ".error(\"Error checking if URL is image:\",r)",
        ".error(\"Error converting image to base64:\",r)": ".error(\"Error converting image to base64:\",r)",
        ".error(\"Encryption failed:\",t)": ".error(\"Encryption failed:\",t)",
        ".error(\"Decryption failed:\",r)": ".error(\"Decryption failed:\",r)",
        ".error(new ed(\"Failed to parse stream\")": ".error(new ed(\"Failed to parse stream\")",
        ".error(new ed(`Error parsing JSON response: \"${u[1]}\"`)": ".error(new ed(`Error parsing JSON response: \"${u[1]}\"`)",
        ".error(p)": ".error(p)",
        ".error(\"Could not parse message into JSON:\",a.data)": ".error(\"Could not parse message into JSON:\",a.data)",
        ".error(\"From chunk:\",a.raw)": ".error(\"From chunk:\",a.raw)",
        ".error(a)": ".error(a)",
        ".error(o.reason)": ".error(o.reason)",
        ".error(\"Error parsing function arguments\",f,JSON.stringify(d.additional_kwargs.function_call)": ".error(\"Error parsing function arguments\",f,JSON.stringify(d.additional_kwargs.function_call)",
        ".error(\"Caught error in getAllPluginsByHook:\",i)": ".error(\"Caught error in getAllPluginsByHook:\",i)",
        ".error(`Document count mismatch! Original: ${t.length}, Distributed: ${i}`)": ".error(`Document count mismatch! Original: ${t.length}, Distributed: ${i}`)",
        ".error(\"Error saving database:\",r)": ".error(\"Error saving database:\",r)",
        ".error(\"Error loading database:\",t)": ".error(\"Error loading database:\",t)",
        ".error(\"Error clearing storage:\",t)": ".error(\"Error clearing storage:\",t)",
        ".error(\"Error getting vector length:\",t)": ".error(\"Error getting vector length:\",t)",
        ".error(\"Embedding instance not found.\")": ".error(\"Embedding instance not found.\")",
        ".error(\"Batch processing error:\",{error:t,batchSize:r.batch.length||0,firstChunk:r.batch[0]?{path:r.batch[0].fileInfo?.path,contentLength:r.batch[0].content?.length,hasFileInfo:!!r.batch[0].fileInfo}:\"No chunks in batch\",errorType:t?.constructor?.name,errorMessage:t?.message})": ".error(\"Batch processing error:\",{error:t,batchSize:r.batch.length||0,firstChunk:r.batch[0]?{path:r.batch[0].fileInfo?.path,contentLength:r.batch[0].content?.length,hasFileInfo:!!r.batch[0].fileInfo}:\"No chunks in batch\",errorType:t?.constructor?.name,errorMessage:t?.message})",
        ".error(`Error indexing file ${n}:`,t)": ".error(`Error indexing file ${n}:`,t)",
        ".error(\"Fatal error during indexing:\",t)": ".error(\"Fatal error during indexing:\",t)",
        ".error(\"Failed to initialize vector store:\",r)": ".error(\"Failed to initialize vector store:\",r)",
        ".error(\"Failed to initialize vector store:\",t)": ".error(\"Failed to initialize vector store:\",t)",
        ".error(\"Could not parse message into JSON:\",u.data)": ".error(\"Could not parse message into JSON:\",u.data)",
        ".error(\"From chunk:\",u.raw)": ".error(\"From chunk:\",u.raw)",
        ".error(\"Error calling tool:\",n)": ".error(\"Error calling tool:\",n)",
        ".error(\"Error in rewriteQuery:\",n)": ".error(\"Error in rewriteQuery:\",n)",
        ".error(\"Error in convertQueryToVector, please ensure your embedding model is working and has an adequate context length:\",l,`\nQuery:`,r)": ".error(\"Error in convertQueryToVector, please ensure your embedding model is working and has an adequate context length:\",l,`\nQuery:`,r)",
        ".error(\"Error indexing vault:\",e)": ".error(\"Error indexing vault:\",e)",
        ".error(`Error processing web search query ${e}:`,r)": ".error(`Error processing web search query ${e}:`,r)",
        ".error(`Error transcribing YouTube video ${e}:`,t)": ".error(`Error transcribing YouTube video ${e}:`,t)",
        ".error(\"Error in intent analysis:\",r)": ".error(\"Error in intent analysis:\",r)",
        ".error(\"Error during LLM invocation:\",i)": ".error(\"Error during LLM invocation:\",i)",
        ".error(\"Error processing image URLs:\",r)": ".error(\"Error processing image URLs:\",r)",
        ".error(\"Error processing images:\",r)": ".error(\"Error processing images:\",r)",
        ".error(\"Error processing YouTube video:\",_)": ".error(\"Error processing YouTube video:\",_)",
        ".error(\"Chain is not initialized properly, re-initializing chain: \",qm()": ".error(\"Chain is not initialized properly, re-initializing chain: \",qm()",
        ".error(\"Resetting default model. No model configuration found for: \",t)": ".error(\"Resetting default model. No model configuration found for: \",t)",
        ".error(\"setChain failed: No chat model set.\")": ".error(\"setChain failed: No chat model set.\")",
        ".error(\"Error in debug search:\",i)": ".error(\"Error in debug search:\",i)",
        ".error(\"Error searching DB:\",a)": ".error(\"Error searching DB:\",a)",
        ".error(\"Error counting tokens: \",o)": ".error(\"Error counting tokens: \",o)",
        ".error(s)": ".error(s)",
        ".error(f)": ".error(f)",
        ".error(\"Error garbage collecting the Copilot index:\",o)": ".error(\"Error garbage collecting the Copilot index:\",o)",
        ".error(\"Error indexing vault to Copilot index:\",o)": ".error(\"Error indexing vault to Copilot index:\",o)",
        ".error(\"Error re-indexing vault to Copilot index:\",o)": ".error(\"Error re-indexing vault to Copilot index:\",o)",
        ".error(\"Error listing indexed files:\",o)": ".error(\"Error listing indexed files:\",o)",
        ".error(\"Error removing files from index:\",a)": ".error(\"Error removing files from index:\",a)",
        ".error(\"Error clearing Copilot cache:\",o)": ".error(\"Error clearing Copilot cache:\",o)",
        ".error(\"aria-hidden\",r,\"in not contained inside\",e,\". Doing nothing\")": ".error(\"aria-hidden\",r,\"in not contained inside\",e,\". Doing nothing\")",
        ".error(\"aria-hidden: cannot operate on \",f,g)": ".error(\"aria-hidden: cannot operate on \",f,g)",
        ".error(\"Error refreshing vault index:\",e)": ".error(\"Error refreshing vault index:\",e)",
        ".error(`Error processing embedded PDF ${s}:`,l)": ".error(`Error processing embedded PDF ${s}:`,l)",
        ".error(`Error processing file ${d.path}:`,f)": ".error(`Error processing file ${d.path}:`,f)",
        ".error(Ie)": ".error(Ie)",
        ".error(`Error processing URL ${t}:`,r)": ".error(`Error processing URL ${t}:`,r)",
        ".error(\"App instance is not available.\")": ".error(\"App instance is not available.\")",
        ".error(\"Error saving chat as note:\",bi(Je)": ".error(\"Error saving chat as note:\",bi(Je)",
        ".error(\"Error regenerating message:\",Je)": ".error(\"Error regenerating message:\",Je)",
        ".error(r)": ".error(r)",
        ".error(\"API key verification failed:\",_)": ".error(\"API key verification failed:\",_)",
        ".error(D)": ".error(D)",
        ".error(\"Version check failed:\",d)": ".error(\"Version check failed:\",d)",
        ".error(\"Error reloading plugin:\",t)": ".error(\"Error reloading plugin:\",t)",
        "name:`${c}.${g.id}`": "name:`${c}.${g.id}`",
        "name:`${c}.${g.id}.${x}`": "name:`${c}.${g.id}.${x}`",
        "name:`attachment.${g.id}.${O}`": "name:`attachment.${g.id}.${O}`",
        "name:\"start\"": "name:\"start\"",
        "name:\"end\"": "name:\"end\"",
        "name:\"error\"": "name:\"error\"",
        "name:\"agent_action\"": "name:\"agent_action\"",
        "name:\"agent_end\"": "name:\"agent_end\"",
        "name:\"text\"": "name:\"text\"",
        "name:\"new_token\"": "name:\"new_token\"",
        "name:\"<runnable_lambda>\"": "name:\"<runnable_lambda>\"",
        "name:`${t.name}:${r}`": "name:`${t.name}:${r}`",
        "name:`${this.getName()}Input`": "name:`${this.getName()}Input`",
        "name:`${this.getName()}Output`": "name:`${this.getName()}Output`",
        "name:\"mustache.js\"": "name:\"mustache.js\"",
        "name:\"Anno Domini\"": "name:\"Anno Domini\"",
        "name:\"Before Christ\"": "name:\"Before Christ\"",
        "name:\"\")?Iq(e):\"": "name:\"\")?Iq(e):\"",
        "name:\"hostHeaderMiddleware\"": "name:\"hostHeaderMiddleware\"",
        "name:\"loggerMiddleware\"": "name:\"loggerMiddleware\"",
        "name:\"recursionDetectionMiddleware\"": "name:\"recursionDetectionMiddleware\"",
        "name:\"aws\"": "name:\"aws\"",
        "name:\"aws-cn\"": "name:\"aws-cn\"",
        "name:\"aws-us-gov\"": "name:\"aws-us-gov\"",
        "name:\"aws-iso\"": "name:\"aws-iso\"",
        "name:\"aws-iso-b\"": "name:\"aws-iso-b\"",
        "name:\"aws-iso-e\"": "name:\"aws-iso-e\"",
        "name:\"aws-iso-f\"": "name:\"aws-iso-f\"",
        "name:\"getUserAgentMiddleware\"": "name:\"getUserAgentMiddleware\"",
        "name:\"deserializerMiddleware\"": "name:\"deserializerMiddleware\"",
        "name:\"serializerMiddleware\"": "name:\"serializerMiddleware\"",
        "name:\"endpointV2Middleware\"": "name:\"endpointV2Middleware\"",
        "name:\"httpAuthSchemeMiddleware\"": "name:\"httpAuthSchemeMiddleware\"",
        "name:\"retryMiddleware\"": "name:\"retryMiddleware\"",
        "name:\"httpSigningMiddleware\"": "name:\"httpSigningMiddleware\"",
        "name:\"contentLengthMiddleware\"": "name:\"contentLengthMiddleware\"",
        "name:\"sigv4\"": "name:\"sigv4\"",
        "name:\"cognito-identity\"": "name:\"cognito-identity\"",
        "name:\"useFipsEndpoint\"": "name:\"useFipsEndpoint\"",
        "name:\"endpoint\"": "name:\"endpoint\"",
        "name:\"region\"": "name:\"region\"",
        "name:\"useDualstackEndpoint\"": "name:\"useDualstackEndpoint\"",
        "name:\"@aws-sdk/client-cognito-identity\"": "name:\"@aws-sdk/client-cognito-identity\"",
        "name:\"AWS SDK for JavaScript Team\"": "name:\"AWS SDK for JavaScript Team\"",
        "name:\"SHA-256\"": "name:\"SHA-256\"",
        "name:\"HMAC\"": "name:\"HMAC\"",
        "name:\"Googlebot\"": "name:\"Googlebot\"",
        "name:\"Opera\"": "name:\"Opera\"",
        "name:\"Samsung Internet for Android\"": "name:\"Samsung Internet for Android\"",
        "name:\"NAVER Whale Browser\"": "name:\"NAVER Whale Browser\"",
        "name:\"MZ Browser\"": "name:\"MZ Browser\"",
        "name:\"Focus\"": "name:\"Focus\"",
        "name:\"Swing\"": "name:\"Swing\"",
        "name:\"Opera Coast\"": "name:\"Opera Coast\"",
        "name:\"Opera Touch\"": "name:\"Opera Touch\"",
        "name:\"Yandex Browser\"": "name:\"Yandex Browser\"",
        "name:\"UC Browser\"": "name:\"UC Browser\"",
        "name:\"Maxthon\"": "name:\"Maxthon\"",
        "name:\"Epiphany\"": "name:\"Epiphany\"",
        "name:\"Puffin\"": "name:\"Puffin\"",
        "name:\"Sleipnir\"": "name:\"Sleipnir\"",
        "name:\"K-Meleon\"": "name:\"K-Meleon\"",
        "name:\"WeChat\"": "name:\"WeChat\"",
        "name:\"Internet Explorer\"": "name:\"Internet Explorer\"",
        "name:\"Microsoft Edge\"": "name:\"Microsoft Edge\"",
        "name:\"Vivaldi\"": "name:\"Vivaldi\"",
        "name:\"SeaMonkey\"": "name:\"SeaMonkey\"",
        "name:\"Sailfish\"": "name:\"Sailfish\"",
        "name:\"Amazon Silk\"": "name:\"Amazon Silk\"",
        "name:\"PhantomJS\"": "name:\"PhantomJS\"",
        "name:\"SlimerJS\"": "name:\"SlimerJS\"",
        "name:\"BlackBerry\"": "name:\"BlackBerry\"",
        "name:\"WebOS Browser\"": "name:\"WebOS Browser\"",
        "name:\"Bada\"": "name:\"Bada\"",
        "name:\"Tizen\"": "name:\"Tizen\"",
        "name:\"QupZilla\"": "name:\"QupZilla\"",
        "name:\"Firefox\"": "name:\"Firefox\"",
        "name:\"Electron\"": "name:\"Electron\"",
        "name:\"Miui\"": "name:\"Miui\"",
        "name:\"Chromium\"": "name:\"Chromium\"",
        "name:\"Chrome\"": "name:\"Chrome\"",
        "name:\"Google Search\"": "name:\"Google Search\"",
        "name:\"Android Browser\"": "name:\"Android Browser\"",
        "name:\"PlayStation 4\"": "name:\"PlayStation 4\"",
        "name:\"Safari\"": "name:\"Safari\"",
        "name:\"InternalErrorException\"": "name:\"InternalErrorException\"",
        "name:\"InvalidParameterException\"": "name:\"InvalidParameterException\"",
        "name:\"LimitExceededException\"": "name:\"LimitExceededException\"",
        "name:\"NotAuthorizedException\"": "name:\"NotAuthorizedException\"",
        "name:\"ResourceConflictException\"": "name:\"ResourceConflictException\"",
        "name:\"TooManyRequestsException\"": "name:\"TooManyRequestsException\"",
        "name:\"ResourceNotFoundException\"": "name:\"ResourceNotFoundException\"",
        "name:\"ExternalServiceException\"": "name:\"ExternalServiceException\"",
        "name:\"InvalidIdentityPoolConfigurationException\"": "name:\"InvalidIdentityPoolConfigurationException\"",
        "name:\"DeveloperUserAlreadyRegisteredException\"": "name:\"DeveloperUserAlreadyRegisteredException\"",
        "name:\"ConcurrentModificationException\"": "name:\"ConcurrentModificationException\"",
        "name:\"sts\"": "name:\"sts\"",
        "name:\"useGlobalEndpoint\"": "name:\"useGlobalEndpoint\"",
        "name:\"@aws-sdk/client-sts\"": "name:\"@aws-sdk/client-sts\"",
        "name:\"ExpiredTokenException\"": "name:\"ExpiredTokenException\"",
        "name:\"MalformedPolicyDocumentException\"": "name:\"MalformedPolicyDocumentException\"",
        "name:\"PackedPolicyTooLargeException\"": "name:\"PackedPolicyTooLargeException\"",
        "name:\"RegionDisabledException\"": "name:\"RegionDisabledException\"",
        "name:\"IDPRejectedClaimException\"": "name:\"IDPRejectedClaimException\"",
        "name:\"InvalidIdentityTokenException\"": "name:\"InvalidIdentityTokenException\"",
        "name:\"IDPCommunicationErrorException\"": "name:\"IDPCommunicationErrorException\"",
        "name:\"InvalidAuthorizationMessageException\"": "name:\"InvalidAuthorizationMessageException\"",
        "name:\"\"} {}`.trim():o.toString()})},inspect(e){switch(typeof e){case\"": "name:\"\"} {}`.trim():o.toString()})},inspect(e){switch(typeof e){case\"",
        "name:\"runName\"": "name:\"runName\"",
        "name:\"wandbName\"": "name:\"wandbName\"",
        "name:\"placeholderName\"": "name:\"placeholderName\"",
        "name:\"en\"": "name:\"en\"",
        "name:\"Fix grammar and spelling\"": "name:\"Fix grammar and spelling\"",
        "name:\"Translate to Chinese\"": "name:\"Translate to Chinese\"",
        "name:\"Summarize\"": "name:\"Summarize\"",
        "name:\"Simplify\"": "name:\"Simplify\"",
        "name:\"Emojify\"": "name:\"Emojify\"",
        "name:\"Make shorter\"": "name:\"Make shorter\"",
        "name:\"Make longer\"": "name:\"Make longer\"",
        "name:\"Generate table of contents\"": "name:\"Generate table of contents\"",
        "name:\"Generate glossary\"": "name:\"Generate glossary\"",
        "name:\"Remove URLs\"": "name:\"Remove URLs\"",
        "name:\"Rewrite as tweet\"": "name:\"Rewrite as tweet\"",
        "name:\"Rewrite as tweet thread\"": "name:\"Rewrite as tweet thread\"",
        "name:\"Explain like I am 5\"": "name:\"Explain like I am 5\"",
        "name:\"Rewrite as press release\"": "name:\"Rewrite as press release\"",
        "name:\"copilot-plus-flash\"": "name:\"copilot-plus-flash\"",
        "name:\"gpt-4o\"": "name:\"gpt-4o\"",
        "name:\"gpt-4o-mini\"": "name:\"gpt-4o-mini\"",
        "name:\"o1-mini\"": "name:\"o1-mini\"",
        "name:\"o3-mini\"": "name:\"o3-mini\"",
        "name:\"claude-3-5-sonnet-latest\"": "name:\"claude-3-5-sonnet-latest\"",
        "name:\"claude-3-5-haiku-latest\"": "name:\"claude-3-5-haiku-latest\"",
        "name:\"command-r\"": "name:\"command-r\"",
        "name:\"command-r-plus\"": "name:\"command-r-plus\"",
        "name:\"gemini-2.0-pro-exp\"": "name:\"gemini-2.0-pro-exp\"",
        "name:\"gemini-2.0-flash\"": "name:\"gemini-2.0-flash\"",
        "name:\"azure-openai\"": "name:\"azure-openai\"",
        "name:\"copilot-plus-small\"": "name:\"copilot-plus-small\"",
        "name:\"copilot-plus-large\"": "name:\"copilot-plus-large\"",
        "name:\"copilot-plus-multilingual\"": "name:\"copilot-plus-multilingual\"",
        "name:\"text-embedding-3-small\"": "name:\"text-embedding-3-small\"",
        "name:\"text-embedding-3-large\"": "name:\"text-embedding-3-large\"",
        "name:\"embed-multilingual-light-v3.0\"": "name:\"embed-multilingual-light-v3.0\"",
        "name:\"text-embedding-004\"": "name:\"text-embedding-004\"",
        "name:\"AES-GCM\"": "name:\"AES-GCM\"",
        "name: \"'+e+'\"": "name: \"'+e+'\"",
        "name:\"localSearch\"": "name:\"localSearch\"",
        "name:\"indexVault\"": "name:\"indexVault\"",
        "name:\"webSearch\"": "name:\"webSearch\"",
        "name:\"getCurrentTime\"": "name:\"getCurrentTime\"",
        "name:\"getTimeRangeMs\"": "name:\"getTimeRangeMs\"",
        "name:\"getTimeInfoByEpoch\"": "name:\"getTimeInfoByEpoch\"",
        "name:\"startPomodoro\"": "name:\"startPomodoro\"",
        "name:\"getFileTree\"": "name:\"getFileTree\"",
        "name:\"youtubeTranscription\"": "name:\"youtubeTranscription\"",
        "name:\"arrow\"": "name:\"arrow\"",
        "name:\"flip\"": "name:\"flip\"",
        "name:\"hide\"": "name:\"hide\"",
        "name:\"offset\"": "name:\"offset\"",
        "name:\"shift\"": "name:\"shift\"",
        "name:\"size\"": "name:\"size\"",
        "name:\"transformOrigin\"": "name:\"transformOrigin\"",
        "name:\"\",prompt:\"": "name:\"\",prompt:\"",
        "name:\"\",provider:D,enabled:!0,isBuiltIn:!1,baseUrl:\"": "name:\"\",provider:D,enabled:!0,isBuiltIn:!1,baseUrl:\"",
        "name:\"pointercancel\"": "name:\"pointercancel\"",
        "name:\"pointermove\"": "name:\"pointermove\"",
        "name:\"pointerup\"": "name:\"pointerup\"",
        "name:\"mousemove\"": "name:\"mousemove\"",
        "name:\"mouseup\"": "name:\"mouseup\"",
        "name:\"touchcancel\"": "name:\"touchcancel\"",
        "name:\"touchmove\"": "name:\"touchmove\"",
        "name:\"touchend\"": "name:\"touchend\"",
        "description:\"Africa (Cape Town)\"": "description:\"Africa (Cape Town)\"",
        "description:\"Asia Pacific (Hong Kong)\"": "description:\"Asia Pacific (Hong Kong)\"",
        "description:\"Asia Pacific (Tokyo)\"": "description:\"Asia Pacific (Tokyo)\"",
        "description:\"Asia Pacific (Seoul)\"": "description:\"Asia Pacific (Seoul)\"",
        "description:\"Asia Pacific (Osaka)\"": "description:\"Asia Pacific (Osaka)\"",
        "description:\"Asia Pacific (Mumbai)\"": "description:\"Asia Pacific (Mumbai)\"",
        "description:\"Asia Pacific (Hyderabad)\"": "description:\"Asia Pacific (Hyderabad)\"",
        "description:\"Asia Pacific (Singapore)\"": "description:\"Asia Pacific (Singapore)\"",
        "description:\"Asia Pacific (Sydney)\"": "description:\"Asia Pacific (Sydney)\"",
        "description:\"Asia Pacific (Jakarta)\"": "description:\"Asia Pacific (Jakarta)\"",
        "description:\"Asia Pacific (Melbourne)\"": "description:\"Asia Pacific (Melbourne)\"",
        "description:\"Asia Pacific (Malaysia)\"": "description:\"Asia Pacific (Malaysia)\"",
        "description:\"AWS Standard global region\"": "description:\"AWS Standard global region\"",
        "description:\"Canada (Central)\"": "description:\"Canada (Central)\"",
        "description:\"Canada West (Calgary)\"": "description:\"Canada West (Calgary)\"",
        "description:\"Europe (Frankfurt)\"": "description:\"Europe (Frankfurt)\"",
        "description:\"Europe (Zurich)\"": "description:\"Europe (Zurich)\"",
        "description:\"Europe (Stockholm)\"": "description:\"Europe (Stockholm)\"",
        "description:\"Europe (Milan)\"": "description:\"Europe (Milan)\"",
        "description:\"Europe (Spain)\"": "description:\"Europe (Spain)\"",
        "description:\"Europe (Ireland)\"": "description:\"Europe (Ireland)\"",
        "description:\"Europe (London)\"": "description:\"Europe (London)\"",
        "description:\"Europe (Paris)\"": "description:\"Europe (Paris)\"",
        "description:\"Israel (Tel Aviv)\"": "description:\"Israel (Tel Aviv)\"",
        "description:\"Middle East (UAE)\"": "description:\"Middle East (UAE)\"",
        "description:\"Middle East (Bahrain)\"": "description:\"Middle East (Bahrain)\"",
        "description:\"South America (Sao Paulo)\"": "description:\"South America (Sao Paulo)\"",
        "description:\"US East (N. Virginia)\"": "description:\"US East (N. Virginia)\"",
        "description:\"US East (Ohio)\"": "description:\"US East (Ohio)\"",
        "description:\"US West (N. California)\"": "description:\"US West (N. California)\"",
        "description:\"US West (Oregon)\"": "description:\"US West (Oregon)\"",
        "description:\"AWS China global region\"": "description:\"AWS China global region\"",
        "description:\"China (Beijing)\"": "description:\"China (Beijing)\"",
        "description:\"China (Ningxia)\"": "description:\"China (Ningxia)\"",
        "description:\"AWS GovCloud (US) global region\"": "description:\"AWS GovCloud (US) global region\"",
        "description:\"AWS GovCloud (US-East)\"": "description:\"AWS GovCloud (US-East)\"",
        "description:\"AWS GovCloud (US-West)\"": "description:\"AWS GovCloud (US-West)\"",
        "description:\"AWS ISO (US) global region\"": "description:\"AWS ISO (US) global region\"",
        "description:\"US ISO East\"": "description:\"US ISO East\"",
        "description:\"US ISO WEST\"": "description:\"US ISO WEST\"",
        "description:\"AWS ISOB (US) global region\"": "description:\"AWS ISOB (US) global region\"",
        "description:\"US ISOB East (Ohio)\"": "description:\"US ISOB East (Ohio)\"",
        "description:\"EU ISOE West\"": "description:\"EU ISOE West\"",
        "description:\"AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native\"": "description:\"AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native\"",
        "description:\"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\"": "description:\"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\"",
        "description:\"Search for notes based on the time range and query\"": "description:\"Search for notes based on the time range and query\"",
        "description:\"Index the vault to the Copilot index\"": "description:\"Index the vault to the Copilot index\"",
        "description:\"Search the web for information\"": "description:\"Search the web for information\"",
        "description:\"Get the current time in various formats, including timezone information\"": "description:\"Get the current time in various formats, including timezone information\"",
        "description:\"Get a time range in milliseconds based on a natural language time expression\"": "description:\"Get a time range in milliseconds based on a natural language time expression\"",
        "description:\"Convert a Unix timestamp (in seconds or milliseconds) to detailed time information\"": "description:\"Convert a Unix timestamp (in seconds or milliseconds) to detailed time information\"",
        "description:\"Start a Pomodoro timer with a customizable interval\"": "description:\"Start a Pomodoro timer with a customizable interval\"",
        "description:\"Get the file tree as a nested structure of folders and files\"": "description:\"Get the file tree as a nested structure of folders and files\"",
        "description:\"Get the transcript of a YouTube video\"": "description:\"Get the transcript of a YouTube video\"",
        "description:\"Files\"": "description:\"Files\"",
        "description:\"Customize the system prompt for all messages, may result in unexpected behavior!\"": "description:\"Customize the system prompt for all messages, may result in unexpected behavior!\"",
        "description:\"Enable encryption for the API keys.\"": "description:\"Enable encryption for the API keys.\"",
        "description:\"Debug mode will log some debug message to the console.\"": "description:\"Debug mode will log some debug message to the console.\"",
        "description:\"Select the Chat model to use\"": "description:\"Select the Chat model to use\"",
        "description:\"Choose where to open the plugin\"": "description:\"Choose where to open the plugin\"",
        "description:\"The default folder name where chat conversations will be saved. Default is 'copilot-conversations'\"": "description:\"The default folder name where chat conversations will be saved. Default is 'copilot-conversations'\"",
        "description:\"The default folder name where custom prompts will be saved. Default is 'copilot-custom-prompts'\"": "description:\"The default folder name where custom prompts will be saved. Default is 'copilot-custom-prompts'\"",
        "description:\"The default tag to be used when saving a conversation. Default is 'ai-conversations'\"": "description:\"The default tag to be used when saving a conversation. Default is 'ai-conversations'\"",
        "description:\"Automatically save the chat when starting a new one or when the plugin reloads\"": "description:\"Automatically save the chat when starting a new one or when the plugin reloads\"",
        "description:\"Show suggested prompts in the chat view\"": "description:\"Show suggested prompts in the chat view\"",
        "description:\"Show relevant notes in the chat view\"": "description:\"Show relevant notes in the chat view\"",
        "description:\"Enter OpenAI Organization ID if applicable\"": "description:\"Enter OpenAI Organization ID if applicable\"",
        "description:\"This is your actual model, no need to pass a model name separately.\"": "description:\"This is your actual model, no need to pass a model name separately.\"",
        "description:\"Leave it blank, unless you are using a proxy.\"": "description:\"Leave it blank, unless you are using a proxy.\"",
        "description:\"Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.\"": "description:\"Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.\"",
        "description:\"The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages.\"": "description:\"The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages.\"",
        "description:\"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step.\"": "description:\"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step.\"",
        "description:\"Default is 90. Decrease if you are rate limited by your embedding provider.\"": "description:\"Default is 90. Decrease if you are rate limited by your embedding provider.\"",
        "description:\"Default is 16. Increase if you are rate limited by your embedding provider.\"": "description:\"Default is 16. Increase if you are rate limited by your embedding provider.\"",
        "description:\"Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!\"": "description:\"Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!\"",
        "description:\"If enabled, the index will be stored in the .obsidian folder and synced with Obsidian Sync by default. If disabled, it will be stored in .copilot-index folder at vault root.\"": "description:\"If enabled, the index will be stored in the .obsidian folder and synced with Obsidian Sync by default. If disabled, it will be stored in .copilot-index folder at vault root.\"",
        "description:\"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\"": "description:\"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\"",
        "link:\"Blink\"": "link:\"Blink\"",
        "link:\"text-accent underline-offset-4 hover:underline\"": "link:\"text-accent underline-offset-4 hover:underline\"",
        "text:\"{\"": "text:\"{\"",
        "text:\"}\"": "text:\"}\"",
        "text:\"text/plain\"": "text:\"text/plain\"",
        "text:\"\",message:new Jr({content:\"": "text:\"\",message:new Jr({content:\"",
        "text:\"\"})}if(r.signal?.aborted)throw new Error(\"": "text:\"\"})}if(r.signal?.aborted)throw new Error(\"",
        "text:\"\",message:new Po({content:e,additional_kwargs:t,tool_calls:o,usage_metadata:n,response_metadata:t,id:t.id})}]}}function F$r(e){return!!(e.tools&&e.tools.length>0)}function k$r(e){return\"": "text:\"\",message:new Po({content:e,additional_kwargs:t,tool_calls:o,usage_metadata:n,response_metadata:t,id:t.id})}]}}function F$r(e){return!!(e.tools&&e.tools.length>0)}function k$r(e){return\"",
        "text:\"\"})}let h=new oi({message:f,text:d.delta.content??\"": "text:\"\"})}let h=new oi({message:f,text:d.delta.content??\"",
        "text:\"\"})),r.signal?.aborted)throw new Error(\"": "text:\"\"})),r.signal?.aborted)throw new Error(\"",
        "text:\"\");let m=new oi({message:p,text:h,generationInfo:d});yield m,n?.handleLLMNewToken(m.text??\"": "text:\"\");let m=new oi({message:p,text:h,generationInfo:d});yield m,n?.handleLLMNewToken(m.text??\"",
        "text: '${this.text}'": "text: '${this.text}'",
        "text:\n\n`+o.map(i=>`": "text:\n\n`+o.map(i=>`",
        "text:\"- {} represents the selected text (not required). \"": "text:\"- {} represents the selected text (not required). \"",
        "text:\"- {[[Note Title]]} represents a note. \"": "text:\"- {[[Note Title]]} represents a note. \"",
        "text:\"- {activeNote} represents the active note. \"": "text:\"- {activeNote} represents the active note. \"",
        "text:\"- {FolderPath} represents a folder of notes. \"": "text:\"- {FolderPath} represents a folder of notes. \"",
        "text:\"- {#tag1, #tag2} represents ALL notes with ANY of the specified tags in their property (an OR operation). \"": "text:\"- {#tag1, #tag2} represents ALL notes with ANY of the specified tags in their property (an OR operation). \"",
        "text:\"Debug: Search OramaDB\"": "text:\"Debug: Search OramaDB\"",
        "text:\"Search\"": "text:\"Search\"",
        "text:\"Inspect Copilot Index by Note Paths\"": "text:\"Inspect Copilot Index by Note Paths\"",
        "text:\"Show Index Data\"": "text:\"Show Index Data\"",
        "text:\"Remove Files from Copilot Index\"": "text:\"Remove Files from Copilot Index\"",
        "text:\"reference\"": "text:\"reference\"",
        "text:\"Sources\"": "text:\"Sources\"",
        "text:\"High Relevance Sources\"": "text:\"High Relevance Sources\"",
        "text:\"Lower Relevance Sources\"": "text:\"Lower Relevance Sources\"",
        "text:\"\",imageUrls:[]};let i=r.map(async s=>{if(await DS.isImageUrl(s))return o.push(s),null;if(!this.mentions.has(s)){let u=await this.processUrl(s);this.mentions.set(s,{type:\"": "text:\"\",imageUrls:[]};let i=r.map(async s=>{if(await DS.isImageUrl(s))return o.push(s),null;if(!this.mentions.has(s)){let u=await this.processUrl(s);this.mentions.set(s,{type:\"",
        "text:\"\",imageUrls:[]},jo=await z(Bt,o);Bo=Bo+Xi.urlContext+jo;let Ie=m;ee&&(Ie+=\"": "text:\"\",imageUrls:[]},jo=await z(Bt,o);Bo=Bo+Xi.urlContext+jo;let Ie=m;ee&&(Ie+=\"",
        "search:\"Google Search\"": "search:\"Google Search\"",
        "search:\"This model can access the internet.\"": "search:\"This model can access the internet.\"",
        "search:\",i),new wT.Notice(\"": "search:\",i),new wT.Notice(\"",
        "page:\"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity\"": "page:\"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity\"",
        "page:\"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\"": "page:\"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\"",
        ".setButtonText(\"Remove\")": ".setButtonText(\"Remove\")",
        ".setName(\"File paths\")": ".setName(\"File paths\")",
        ".setDesc(\"Paste the markdown list of file paths to remove from the index. You can get the list by running the command `List all indexed files`.\")": ".setDesc(\"Paste the markdown list of file paths to remove from the index. You can get the list by running the command `List all indexed files`.\")",
        ".setPlaceholder(`- [[path/to/file1.md]]\n- [[path/to/file2.md]]`)": ".setPlaceholder(`- [[path/to/file1.md]]\n- [[path/to/file2.md]]`)",
        ".appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\")": ".appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\")",
        ".setTitle(\"Thanks for being a Copilot Plus user \\u{1F44B}\")": ".setTitle(\"Thanks for being a Copilot Plus user \\u{1F44B}\")",
        ".setTitle(`Copilot: ${o.name}`)": ".setTitle(`Copilot: ${o.name}`)",
        ".setTitle(\"Edit Command\")": ".setTitle(\"Edit Command\")",
        ".setTitle(\"Welcome to Copilot Plus \\u{1F680}\")": ".setTitle(\"Welcome to Copilot Plus \\u{1F680}\")",
        ".setTitle(\"Add Extension\")": ".setTitle(\"Add Extension\")",
        ".setTitle(\"Add Custom Pattern\")": ".setTitle(\"Add Custom Pattern\")"
    }
}
